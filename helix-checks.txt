Set NS variable for later use
$ export NS=helix-platform
$ export IS-NS=helix-is

Commands to be run from IS platform pods

RSSO/Certificate Troubleshooting - RSSO login - expected to return a token
$ curl -k -X POST $RSSO_SERVICE_URL/api/v1.1/admin/login -H 'Content-Type: application/json' -d '{"username":"admin","password":"RSSO#Admin#"}'

Look for clues in
/opt/bmc/ARSystem/db/arjavplugin-authentication.log
/tmp/rsso.0.log

Check the RSSO tenant/agent
$ cat /opt/bmc/ARSystem/conf/rsso.cfg
$ cat /opt/bmc/ARSystem/conf/rsso-agent.properties

Download and compile SSLPoke.java 
$ curl -s https://gist.githubusercontent.com/MatthewJDavis/50f3f92660af72c812e21b7ff6b56354/raw/7f258a30be4ddea7b67239b40ae305f6a2e98e0a/SSLPoke.java -o SSLPoke.java
$ /opt/java/bin/javac SSLPoke.java

Test for valid certificate using SSLPoke
$ /opt/java/bin/java SSLPoke $WEBAPI_HOST_NAME 443
$ /opt/java/bin/java -Djavax.net.ssl.trustStore=cacerts SSLPoke $WEBAPI_HOST_NAME 443
 
REST API checks
$ curl -k -X POST https://$WEBAPI_HOST_NAME/api/jwt/login -H 'content-type/x-www-form' -d 'username=Demo&password=P@ssw0rd'

FTS Elastic tests
$ curl -k -u admin:admin -X GET https://$FTS_ELASTIC_HOST:9200/_cluster/health?pretty

cacerts contains expected esnode certificate?
$ /opt/java/bin/keytool --list -cacerts -storepass changeit -alias esnode
esnode, Aug 6, 2021, trustedCertEntry,
Certificate fingerprint (SHA-256): 1D:9B:18:7B:27:9B:0D:38:21:76:5E:E0:77:89:0B:8B:48:50:24:E8:5D:76:4D:1B:4A:82:31:9C:FE:56:8A:90

SmartApps deployment checks
$  JWT=$(curl -k -X POST http://localhost:8008/api/jwt/login -H 'content-type/x-www-form' -d 'username=Demo&password=P@ssw0rd')
$ curl http://localhost:8008/api/rx/application/bundle/deploymentstatus/IDGERME9BMY5DASD9UR2SD9UR2HX3S -H "Authorization: AR-JWT $JWT" | jq .

RSSO Server Checks
- Login to RSSO as the admin user and verify the realm has been created under the SAAS_TENANT
- Realm ID is CUSTOMER_SERVICE-ENVIRONMENT
- Check that all the aliases in the realm are present and correct in Application Domain(s) section
- Tenant ID is name.number as seen on Tenant page
- Authentication page - Host should be platform-user-ext.HELIX_PLATFORM_NAMESPACE with port 46262

External Tests

$ curl -k -X POST $LB_HOST/rsso/api/v1.1/admin/login -H 'Content-Type: application/json' -d '{"username":"admin","password":"RSSO#Admin#"}'
$ curl -X POST $LB_HOST/rsso/api/v1.1/admin/login -cacerts custom_cacert.pem -H 'Content-Type: application/json' -d '{"username":"admin","password":"RSSO#Admin#"}'

Verify PEM at https://tools.keycdn.com/ssl

Recreate IS secret from good cacerts
$ kubectl delete secret cacerts -n $IS-NS
$ kubectl create secret -n $IS-NS generic cacerts --from-file=cacerts --dry-run=client -o yaml | kubectl apply -f -

Extract cacerts from secret
$ kubectl get secret -n $IS-NS cacerts -o jsonpath='{.data.cacerts}' | base64 -d > cacerts

Get certs from LB/Ingress
$ openssl s_client -showcerts -connect LB_HOST:443

Convert cacerts to pem
$ keytool -importkeystore -srckeystore cacerts -destkeystore keystore.p12 -srcstoretype jks -deststoretype pkcs12 -srcstorepass changeit -deststorepass changeit
$ openssl pkcs12 -in keystore.p12 -out keystore.pem

Update Ingress controller SSL secret
$ kubectl create secret tls my-tls-secret --cert=/path/to/cert.pem --key=/path/to/privkey.pem -n ingress-nginx

Kubernetes Events
$ kubectl get events -n ${NS} --sort-by='.metadata.creationTimestamp' --field-selector=type!=Normal | grep -E "$(date -d '1 hour ago' --utc +%FT%T|awk -F"+" '{print $1}')|Unknown|Warning|Error"
--sort-by='.lastTimestamp'
--sort-by='.firstTimestamp'


