# Mark_Walters@bmc.com - please note that this script is NOT supported by BMC Software and is provided as-is.
---
- hosts: localhost
  gather_facts: true

  tasks:

      # Load variables
    - name: Load default config variables
      include_vars: 00-variables.yaml

    - name: Add the git user and create an SSH key
      ansible.builtin.user:
        name: '{{ git_user }}'
        comment: Git user for Deployment Engine
        state: present
        create_home: true
        shell: /bin/bash
        generate_ssh_key: true
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        ssh_key_comment: "BMC Deployment Engine from {{ git_user }}/${HOSTNAME}"
        password: "{{ git_user_pwd | password_hash('sha512') }}"

    - name: Set up ssh from git to git
      ansible.posix.authorized_key:
        user: '{{ git_user }}'
        state: present
        key: "{{ lookup('file', '~{{ git_user }}/.ssh/id_rsa.pub') }}"

    - name: Update known_hosts
      ansible.builtin.known_hosts:
        path: "~{{ git_user }}/.ssh/known_hosts"
        name: "{{ item }}"
        key: "{{ lookup('pipe', 'ssh-keyscan {{ item }}') }}"
        state: present
      with_items:
        - "{{ ansible_fqdn }}"
        - "{{ ansible_hostname }}"

    - name: Ensure the required directories exist
      ansible.builtin.file:
        path: '~{{ git_user }}/{{ item }}'
        state: directory
      loop:
        '{{ git_user_dirs }}'

    - name: Create .gitconfig
      ansible.builtin.copy:
        dest: '~{{ git_user }}/.gitconfig'
        content: |
            [user]
            email = user@example.com
            name = Full Name

    - name: Add the jenkins user and create an SSH key
      ansible.builtin.user:
        name: '{{ jenkins_user }}'
        comment: Jenkins user for Deployment Engine
        state: present
        create_home: true
        shell: /bin/bash
        generate_ssh_key: true
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        ssh_key_comment: "BMC Deployment Engine from {{ jenkins_user }}/${HOSTNAME}"
        password: "{{ jenkins_user_pwd | password_hash('sha512') }}"

    - name: Set up ssh from jenkins to git
      ansible.posix.authorized_key:
        user: '{{ git_user }}'
        state: present
        key: "{{ lookup('file', '~{{ jenkins_user }}/.ssh/id_rsa.pub') }}"

    - name: Update known_hosts
      ansible.builtin.known_hosts:
        path: "~{{ jenkins_user }}/.ssh/known_hosts"
        name: "{{ item }}"
        key: "{{ lookup('pipe', 'ssh-keyscan {{ item }}') }}"
        state: present
      with_items:
        - "{{ ansible_fqdn }}"
        - "{{ ansible_hostname }}"

    - name: Unzip GIT repositories to repos directory
      unarchive:
        src: '{{ item.name }}'
        dest: '{{ item.target }}'
      loop:
        - { name: "{{ itsm_zip }}", target: "~{{ git_user }}/{{ git_repo_dir }}" }
        - { name: "{{ libraries_zip }}", target: "~{{ git_user }}/{{ git_repo_dir }}/LIBRARY_REPO" }
      when: unzip_git_repos|bool

    - name: Copy kubeconfig to git user
      ansible.builtin.copy:
        src: kubeconfig
        dest: ~{{ git_user }}/.kube/config

    - name: Set ownership of the home directories and files
      ansible.builtin.file:
        path: '/home/{{ item }}'
        owner: '{{ item }}'
        group: '{{ item }}'
        recurse: true
      with_items:
        - "{{ git_user }}"
        - "{{ jenkins_user }}"
