---
- hosts: localhost

  tasks:

      # Load variables
    - name: Load default config variables
      include_vars: 00-variables.yaml

    - name: Add Jenkins repository
      ansible.builtin.yum_repository:
        name: jenkins
        description: Jenkins repo
        baseurl: https://pkg.jenkins.io/redhat-stable
        gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
      when: ansible_os_family|lower == "redhat"

    - name: Ubuntu block
      block:
      - name: Add Jenkins GPG key
        ansible.builtin.get_url:
          url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
          dest: /etc/apt/keyrings/jenkins-keyring.asc
          mode: '0644'

      - name: Add Jenkins repository into sources list
        ansible.builtin.apt_repository:
          repo: 'deb [signed-by=/etc/apt/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/'
          state: present

      when: ansible_os_family|lower == "debian"

    - name: Install Jenkins
      package:
        name: jenkins
        state: present

    - name: Start and enable Jenkins service
      ansible.builtin.service:
        name: jenkins
        state: started
        enabled: true

    - name: Pause for 15s to allow Jenkins to start
      ansible.builtin.pause:
        seconds: 15

    - name: Get firewalld status
      ansible.builtin.systemd:
        name: firewalld
      register: firewalld_service_status

    - name: Allow Jenkins firewalld
      ansible.posix.firewalld:
        service: jenkins
        state: enabled
        permanent: true
        immediate: true
      when: firewalld_service_status.status.ActiveState == "active"

    - name: Read admin pwd
      shell: cat {{ jenkins_dir}}/secrets/initialAdminPassword
      register: adminpwd

    - name: Unlock and add admin user
      community.general.jenkins_script:
        script: |
          import jenkins.model.*
          import hudson.security.*
          def instance = Jenkins.getInstance()
          def hudsonRealm = new HudsonPrivateSecurityRealm(false)
          hudsonRealm.createAccount('${jenkins_user}', '${user_pwd}')
          instance.setSecurityRealm(hudsonRealm)
          def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
          strategy.setAllowAnonymousRead(false)
          instance.setAuthorizationStrategy(strategy)
          instance.save()
        args:
          jenkins_user: "{{ jenkins_login_user }}"
          user_pwd: "{{ jenkins_login_user_pwd }}"
        user: admin
        password: "{{ adminpwd.stdout }}"

    - name: Complete setup wizard
      community.general.jenkins_script:
        script: |
          import static jenkins.model.Jenkins.instance as jenkins
          import jenkins.install.InstallState
          if (!jenkins.installState.isSetupComplete()) {
            InstallState.INITIAL_SETUP_COMPLETED.initializeState()
          }
        user: admin
        password: "{{ adminpwd.stdout }}"
